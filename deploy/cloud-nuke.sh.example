#!/bin/bash

# Assume role
aws sts assume-role --role-arn $AWS_ROLE_ARN_MANAGEMENT_ACCOUNT --role-session-name "management-session-cloud-nuke" > /tmp/assumed-role-output.json

# Extract temporary credentials from the assumed role output
export AWS_ACCESS_KEY_ID=$(jq -r .Credentials.AccessKeyId /tmp/assumed-role-output.json)
export AWS_SECRET_ACCESS_KEY=$(jq -r .Credentials.SecretAccessKey /tmp/assumed-role-output.json)
export AWS_SESSION_TOKEN=$(jq -r .Credentials.SessionToken /tmp/assumed-role-output.json)

# Assume role
aws sts assume-role --role-arn $AWS_ROLE_ARN_SANDBOX_TARGET --role-session-name "management-session-cloud-nuke" --duration-seconds 1800 > /tmp/assumed-role-output.json

# Extract temporary credentials from the assumed role output
export AWS_ACCESS_KEY_ID=$(jq -r .Credentials.AccessKeyId /tmp/assumed-role-output.json)
export AWS_SECRET_ACCESS_KEY=$(jq -r .Credentials.SecretAccessKey /tmp/assumed-role-output.json)
export AWS_SESSION_TOKEN=$(jq -r .Credentials.SessionToken /tmp/assumed-role-output.json)

# Execute cloud-nuke with the assumed role credentials
/app/cloud-nuke aws --region us-east-1 --region us-east-2 --region us-west-1 --region us-west-2 --dry-run

# Clean up temporary assumed-role output file
rm /tmp/assumed-role-output.json
